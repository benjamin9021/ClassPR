Eclipse 팁 #1 (코드 Style 설정)



팀 프로젝트를 진행할때 개발자별로 Coding Style이 달라서 고생하는 경우가 많습니다.
이를 위해 Eclipse는 코드 형식화를 지원하는데요,

아래와 같이 코딩 규칙을 위해바는 코드가 있다고 가정합시다.



해당 코드 위에서 [ Ctrl+Shift+F ] 키만 누르면 아래와 같이 코드가 이쁘게 정리됩니다.



이는 Eclipse에서 설정된 Code Formatter의 설정에 따른 것입니다.
프로젝트에서 개발된 모든 코드에 같은 코딩 규칙을 적용하고 싶다면..
결정된 Coding Convention에 따라 Code Formatter의 설정을 바꾼 다음,
그것을 XML 파일로 Export하고, 개발자에게 Import 시켜 적용하도록 하면 된답니다.

아래 그림은 Windows - Preferences 에서 "Java - Code Style - Code Formatter"를
선택했을 때 나오는 그림입니다.
Eclipse 3.0은 기본적으로 2가지 코드 형식을 기본적으로 내장하고 있습니다.



Java Conventions를 선택하고, Show.. 버튼을 누르면 해당 설정을 커스터마이징 할 수 있습니다.
탭 사이즈와 괄호의 위치 등 모든 것을 변경할 수 있습니다.

Eclipse 팁 #2 (Import문 정리)



개발할 때 어떤 기능을 구현하기 위해 특정 라이브러리를 import 시켜놓고,
그 기능이 필요없어져서 삭제한 다음에도 import문은 그대로 두는 경우가 많습니다.

그때 Eclipse가 제공하는 Organize import 기능은 아주 유용한데요..
아래와 같이 사용되지 않는 라이브러리를 import한 경우 Eclipse는 앞에 전구를 키고 표시해줍니다.
이때 [ Ctrl+Shift+O ] 버튼을 누르면 사용하지 않는 모든 import 문이 정리됩니다. 아래와 같이 깨끗하게 말이죠.



또 한가지 유용한 기능은 같은 패키지 내에서 여러 개의 클래스를 import할 경우입니다.
예를 들어 한 패키지 내에서 4개 이상의 클래스를 import 한다면,
그것을 *로 합쳐서 표시하도록 하고 싶을 때가 있습니다.
그럴 때는 window - preference 로 가서 java - code style - organize import에서
Number of imports needs for .*의 수를 4로 해놓으면,
같은 패키지에서 4개이상의 클래스가 임포트되면 *로 합쳐서 표시해줍니다.
(Apply 버튼 바로 위에 그 항목이 있습니다.)



Eclipse 팁 #3 (영역별 주석처리)



여러 줄에 걸쳐 있는 코드를 주석 처리하고 싶은데,
주석 처리하고자 하는 영역 내에 /* */가 있을 경우 참 곤란하시죠?

일일이 // 를 앞에 붙이려니 얼마나 손가락이 빠른지를 테스트하는거 같구.. ^^*
그럴 때 주석처리할 영역을 선택 한 다음 [ Ctrl+/ ] 를 눌러보세요.
아래와 같이 자동으로 해당 영역을 주석으로 만들어줍니다.
주석을 해제하고 싶다면 다시 한번 더 [ Ctrl+/ ]를 눌러주면 됩니다.



Eclipse 팁 #4 (에디터칸이동)



실제 프로젝트를 작업하다 보면 한번에 열어놓은 파일이 30개가 넘는 것은 기본이죠?
그때 해당 파일들 사이를 열려진 윈도우를 [ Alt+Tab ] 을 이용해서

이동하는 것 같은 기능이 있다면 편할겁니다.
그러한 단축키가 [ Ctrl+F6 ] 입니다.
그 키를 누르면 화면 중앙에 아래와 같은 에디터 이동 화면이 뜹니다



바로 이전으로 이동할 때는 [ Ctrl+F6 ]이 편하지만,
여러 개 중 하나를 이동할 때는 [ Ctrl+F6 ]을 누른 후,

[Ctrl+화살표] 를 이용해서 원하는 에디터로 이동하는 것이 편합니다.

Eclipse 팁 #6 (줄번호 표시 및 줄 이동하기)



Eclipse의 기본 설정에 라인 번호는 표시되지 않도록 되어 있습니다.
디버깅할 때 특정 라인에 에러가 있음을 확인했는데, 일일이 줄을 세어가면서 이동할 수도 없구..
그때 해당 라인으로 이동하기 위한 단축키가 [ Ctrl+L ] 입니다.
윈도우와 같이 Ctrl+G 로 단축키를 변경해서 쓰시는 것도 좋을 듯 합니다.

아예 줄번호가 항상 표시되도록 하고 싶다면 window - preference 에서,
Java - Editor로 이동한 다음 "Show line numbers"를 체크해두시면 됩니다.

Eclipse 팁 #7 (변경사항 추적하기)



변경 사항을 추적하고자 하는 파일을 PackageExplorer에서 선택 후,
오른쪽 버튼을 눌러 컨텍스트 메뉴에서 [ compare with Local History ] 선택합니다.



시간대 별로 이전의 작업 결과를 보실 수 있습니다.
만일 이전의 코드로 되돌아가고 싶다면, 같은 방법으로 파일의 컨텍스트 메뉴에서
[ Replace with ] 를 선택하고, [ Local History ]에서 변경하면 됩니다.



Eclipse 팁 #8 (Javadoc 문서생성 )



JavaDoc 형태의 주석으로 소스코드 문서화가 된 상태라고 가정하겠습니다.
Project 메뉴의 [ Generate Javadoc... ] 기능을 실행하면
간편한 마법사의 지원을 통해 Javadoc 문서를 생성할 수 있습니다.

일반적으로 프로젝트 루트 밑에 doc 이란 폴더 안에 JavaDoc으로 생성된 API 문서를 포함합니다.



생성될 API 문서에 포함시킬 정보를 선택하는 것이 마법사의 다음 단계입니다.
Finish 버튼을 누르면 Package Explorer에 아래와 같이 API 문서가 생성된 것을 확인할 수 있습니다.

Eclipse 팁 #9 (전체프로젝트 ZIP 백업)



전체 프로젝트를 백업하기 위해 압축을 해야 할때 유용한 기능입니다.
File 메뉴의 Export 기능을 실행하면 아래와 같은 윈도우가 뜹니다.



선택요소 중에서 ZIP 파일을 선택합니다.
다음 화면은 백업할 요소들을 선택하는 것입니다.
일반적으로 자동 생성되는 JavaDoc 문서나 Classes 파일들은 백업하지 않습니다.
적당한 백업 파일 이름과 위치를 결정하고 Finish 버튼을 누르면 백업이 완료됩니다.



Java Editor 단축키

Ctrl + Shift + M : 캐럿이 위치한 대상에 필요한 특정 클래스 Import 시키기
Ctrl + Shift + O : 소스에 필요한 패키지를 자동으로 Import 시키기
Ctrl + Shift + F : 소스코드 자동 정리
Ctrl + Shift + G : 특정 메써드나 필드를 Reference하고 있는 곳을 찾는다.
Ctrl + Shift + K : 이전찾기 (또는, 찾고자하는 문자열을 블럭으로 설정한 후 역으로 찾고자 하는 문자열을 찾아감.)
Ctrl + shift + G : 특정 메써드나 필드를 참조하고 있는 곳을 찾는다.
Ctrl + shift + B : 현재커서위치에 Break point설정/해제
Ctrl + 1 : Quick Fix. 에러가 발생했을 경우 Quick Fix를 통해 쉽게 해결이 가능하다.(Rename에 주로 사용)
Ctrl + 2 + R : Rename (리팩토링)
Ctrl + Shift + / : 선택 영역 Block Comment 설정
Ctrl + Shift + \ : 선택 영역 Block Comment 제거
Ctrl + / : 한줄 또는 선택영역 주석처리 / 제거
Ctrl + S : 저장 및 컴파일
Ctrl + I : 소스 깔끔 정리(인덴트 중심의 자동구문정리)
Ctrl + space : 어휘의 자동완성(Content Assistance)
Ctrl + Q : 마지막 편집위치로 가기
Ctrl + L : 특정줄번호로 가기
Ctrl + D : 한줄삭제
Ctrl + O : Outline 창 열기
Ctrl + H : Find 및 Replace
Ctrl + K : 다음찾기(또는, 찾고자 하는 문자열을 블럭으로 설정한 후 키를 누른다.)
Ctrl + N : 새로운 파일 및 프로젝트 생성
Ctrl + Shift + S : 열려진 모든파일 저장 및 컴파일
Ctrl + 객체클릭(혹은 F3) : 클래스나 메소드 혹은 멤버를 정의한 곳으로 이동(Open Declaration)
Alt + Shift + UP : 커서를 기준으로 토큰단위 블럭지정 (괄호의 열고 닫기 쌍 확인에 유용) ==> 괄호의 뒤에 마우스 커서를 위치시킨 후 더블클릭한 것과 같은 효과
Alt + Shift + DOWN : 커서를 기준으로 토큰단위 블럭해제
Alt + Shift + J : 설정해 둔 기본주석을 자동으로 달기 (메소드나 멤버변수에 포커스 두고 실행)
Alt + / : Word Completion
Alt + Shift + R : Rename
Alt + ->, Alt + <- : 이후, 이전
해당 프로젝트에서 Alt + Enter : Project 속성
sysout > Ctrl + Space : System.out.println();
try > Ctrl + Space : 기본 try-catch문 완성
for > Ctrl + Space : 기본 for문 완성
템플릿을 수정,추가 : Preferences > java > editor > Templates

Ctrl + Alt + R
Ctrl + F11 : 실행
F11 : 디버깅 시작
F5 : step into
F6 : step over
F8 : 디버깅 계속
Ctrl + . : 다음오류부분으로 가기
Ctrl + , : 이전오류부분으로 가기
F12 : 에디터로 커서이동
ALT + UP,DOWN : 현재 줄 위치 이동
Ctrl + J : 검색할 단어를 입력하면서 실시간으로 검색
Ctrl + Shift + J : 검색할 단어를 입력하면서 실시간으로 거꾸로 검색
F4 : 클래스명을 선택하고 누르면 해당 클래스의 Hierarchy 를 볼 수 있다.
Ctrl + Alt + up/down : 한줄 duplicate
Alt + Shift + 방향 : 선택
Ctrl + Shift + G : 케럿이 위치한 객체가 참조 되는 곳을 찾아 준다


Window 이동

F10 : 메뉴창을 활성화
Ctrl + F8 : 다음 Perspective로 이동
Ctrl + N : 새로운 파일 및 프로젝트 생성.
Ctrl + Shift + Down : Java Editor에서 다음 member로 이동.
Ctrl + F7 : 다음 View로 이동.
Ctrl + Shift + F7 : 이전 View로 이동.
Alt + <- : 이전 작업 화면
Alt + -> : 다음 작업 화면
F12 : 컴파일 중 에러등으로 포커스가 다른데로 갔을 때 Editor 로 커서 이동
Ctrl + 1 : 컴파일 에러가 발생한 곳에서 Ctrl + 1을 누를 경우 컴파일 에러에 대한 해결책을 제시


디버깅 단축키

CTRL + Shift + B : 현 커서의 위치에 브레이크 포인터 설정/해제
F11 : 디버깅 시작
F8 : 디버깅 계속
F6 : 한줄씩 실행(Step Over)
F5 : 한줄씩 실행하되 함수일 경우 그 함수 내부로 들어감(Step Into)
CTRL + R : 현재 라인까지 실행(Run to Line)


Refactoring 단축키

Shift + ALT + 알파벳 : Refactoring을 위한 단축키 임.



RUN 단축키

Ctrl + F11 : 이전에 실행되었던 Run파일 실행.

Comments (Hide)

ctrl + 1

Posted by Anonymous at 9월 22, 2005 08:06 | Permalink

Ctrl + O : 모든 클래스, 프로퍼티 트리 보기, 선택가능

Posted by Anonymous at 1월 11, 2006 11:47 | Permalink

Ctrl + Shift + L : 단축키 보기 (한 번 더 누르면 키 설정메뉴로 들어감)

Posted by Anonymous at 3월 13, 2006 20:23 | Permalink

Ctrl + Shift + T : 클래스 찾기

출처: https://zipoo80.tistory.com/entry/Eclipse-편리한-기능-및-단축키 [아자아자 화이팅~!]